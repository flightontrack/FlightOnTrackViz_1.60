
@{  Layout = null;
    var areaId = ViewBag.AreaId;
    var flights = ViewBag.Flights;
    var isArea = ViewBag.IsArea;
    var isFlightList = ViewBag.isFlightList;
    var methodBack = ViewBag.backUrl;
    string urlMethod= "GetAreaFlightsJson";
    object urlMethodPar = new { areaId = ViewBag.AreaId };
    //string urlBackMethod = "GetAreaFlightsJson";

    //if (isArea??false)
    //{
    //    urlMethod = "GetAreaFlightsJson";
    //    urlMethodPar = new { areaId = ViewBag.AreaId };
    //    urlBackMethod = "DisplayAreaMovingMap";
    //}
    if (isFlightList??false)
    {
        urlMethod = "GetMultipleFlightsDataJson";
        urlMethodPar = new { fs = @ViewBag.Flights };
    }
}

<!DOCTYPE html>
<html>
<head>
    <title>Flight Map</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta charset="utf-8">
    <meta http-equiv='cache-control' content='no-cache'>
    <meta http-equiv='expires' content='0'>
    <meta http-equiv='pragma' content='no-cache'>

    <script src="http://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script src="~/Scripts/getDrawActveFlights.js" type="text/javascript"></script>
    <script src="http://maps.googleapis.com/maps/api/js?key=AIzaSyAIm-QyYK0jc3jyTMA6rgCTnx-9nWILiiQ"></script>
    <link href="~/Content/bootstrap.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/custom.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/googlemap.css" rel="stylesheet" type="text/css" />

    <script>

        var routeSelect;
        var refreshSelect;
        var messages;
        var map;
        var intervalID;
        var newInterval;
        var currentInterval;
        var iconUrl;
        var INTERVAL = 5000;
        var REQUEST_COUNT = 60;
        var mapOptions;
        var cookieName = "fontZoomLevel=";
        var markersStore = [];
        var infowindowStore = [];
        var flightPathStore = [];
        var isRefresh = true;
        var cnt =0;
        var defaultCenter;
        var centerOnDefault = false;
        var currentCenter;
        var greenControl;
        var redControl;
        var areaRadius = @ViewBag.ARadius;
        var defaultZoomLevel =(areaRadius>=10000?12:13);
        var alertText;
        var greenAlertText = "Update is On";
        var redAlertText = "Update is Off. Refresh the page.";

        //---------------------------------------------------------------
        function init() {

            greenControl = document.getElementById('GreenTextDiv');
            redControl = document.getElementById('RedTextDiv');
            greenControl.style.display = 'inline';

            // set the map center dd zoom cookie
            var zoomLevel = (getCookie(cookieName) == '' ? defaultZoomLevel : parseInt(getCookie(cookieName)));
            defaultCenter = new google.maps.LatLng(@ViewBag.AreaCenterLat, @ViewBag.AreaCenterLong);
            mapOptions = {
                zoom: zoomLevel,
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                center: defaultCenter
            };
            map = new google.maps.Map(document.getElementById('map_div'), mapOptions);
            var circle = new google.maps.Circle({
                strokeColor: '#FF0000',
                strokeOpacity: 0.4,
                strokeWeight: 2,
                fillColor: 'FEFEFE',
                fillOpacity: 0.1,
                map: map,
                center: defaultCenter,
                radius: areaRadius
            });
            getMarkers();
            map.controls[google.maps.ControlPosition.TOP_CENTER].push(greenControl);
        }

        //---------------------------------------------------------------
        function getMarkers() {

            var url = '@Html.Raw(@Url.Action(urlMethod, urlMethodPar))';
            url +="&c="+cnt;

            $.ajax({
                url:url,
                type: 'GET',
                dataType: 'json',
            })
               .fail (function (xhr, status, errorThrown) {
                   console.log("responseText: " + xhr.responseText);
                   console.log("status: " + xhr.status);
                   console.log("errorThrown: " + errorThrown);
               })
              .always(function( data ) {
                  //set marker infowindow polyline for multiple flights
                  console.log(url);
                  getDrawActveFlights(data);
                  if (cnt<REQUEST_COUNT){
                      //setup next getMarkers call
                      setTimeout(getMarkers,INTERVAL);
                      //cnt++;
                  }
                  else{
                      greenControl.style.display = 'none';
                      redControl.style.display = 'inline';
                      map.controls[google.maps.ControlPosition.TOP_CENTER].push(redControl);
                  }
              });
        }
        //---------------------------------------------------------------
        function getCookie(cname) {
            var cookieArray = document.cookie.split(';');
            if (cookieArray[0].indexOf(cname) == 0) return cookieArray[0].split('=')[1];
            return "";
        }
        //---------------------------------------------------------------
        function buttonback() {
            var url = '@Url.Action(@ViewBag.backUrl, new { id = areaId })';
            window.location.assign(url);
        }
        function buttonAutoRefresh() {
            var ri = document.getElementById("RadiusSelList");
            r = ri.options[ri.selectedIndex].value;
            var url = '@Html.Raw(@Url.Action("DisplayAreaMovingMap", new { aId = areaId, fs = flights }))';
            url= url+="&aRadius="+r;
            window.location.assign(url);
    }
    function buttonCenterOnDefault(element) {
        //if (element.innerText=="Center On Area"){
        //    element.innerText="Center On Plane";
        currentCenter=map.getCenter();
        map.setCenter(defaultCenter);
        map.setZoom(defaultZoomLevel);
    }

    //---------------------------------------------------------------
    $(document).ready(function () {
        init();
    });
</script>
</head>
<body>
    @*<div class="container no-padding-column">*@
        <div class="row">
                @*  <td><button onclick="buttonback()" class="btn btn-primary active" type="submit">Back</button></td>*@
                <div class="col-sm-1"></div>
                <div class="col-sm-2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Select area radius(km):</div>
                <div class="col-sm-1">@Html.DropDownList("RadiusSelList", @ViewBag.RadiusSelList as SelectList, new { @class = "form-control" })</div>
                <div class="col-sm-1"><button onclick="buttonAutoRefresh()" class="btn btn-default" type="submit">Refresh Page</button></div>
                <div class="col-sm-1"><button onclick="buttonCenterOnDefault(this)" class="btn btn-default" type="button" id="onCenter" value="Center">Center/Zoom Default</button></div>
        </div>
        <div class="row no-padding-column">
            <div id="map_div"></div>
            <div id="GreenTextDiv" style="color: green; position: absolute;display:none">
                <h1>Update is On</h1>
            </div>
            <div id="RedTextDiv" style="color: red; position: absolute; display: none;">
                <blink><h1><b>Update is Off. Refresh the page.</b></h1></blink>
            </div>
        </div>
     @*</div>*@

</body>
</html>