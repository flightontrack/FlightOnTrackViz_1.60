@*@model IEnumerable<MVC_Acft_Track.Models.<vFlightAcftPilot>*@

@model MVC_Acft_Track.ViewModels.vmSearchRequestFights

@Html.ActionLink("[ System Management Menu ]", "Index", "Admin")
<h2>@ViewBag.ViewTitle</h2>

@{
    var grid = new WebGrid(
        Model.flightList,
        defaultSort: "FlightID",
        rowsPerPage: Model.rowsPerPage,
        canSort: true,
        canPage: true
        );
    grid.SortColumn = Model.sortCol;
    grid.SortDirection = Model.sortDir;
}
@if (ViewBag.error != null)
{
    <div class="alert alert-danger" role="alert">
        <a href="#" class="alert-link">@ViewBag.error</a>
    </div>
}
@if (Request.IsAuthenticated)
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken();
    <p><i>
        Top <span class="badge">@Model.topN </span> records are listed out of total <span class="badge">@Model.totalRecordCount </span> in the history.
        To sort flights click on a column title.  To delete or share selected flights use the buttons below.<br>
    </i></p>
        @Html.Hidden("acftNumLocal", Model.vmsearchRequest.acftNumLocal);
        @Html.Hidden("acftNumLocal", Model.vmsearchRequest.flightID);
        @Html.Hidden("acftNumLocal", Model.vmsearchRequest.airportID);
        @Html.Hidden("acftNumLocal", Model.vmsearchRequest.pilotID);
        @Html.Hidden("acftNumLocal", Model.vmsearchRequest.flightDate);
        @Html.Hidden("acftNumLocal", Model.vmsearchRequest.companyID);
        @*@Html.Hidden("acftNumLocal", Model.vmsearchRequest.isSearchJunk);*@

        <button type="submit" name="buttonClicked" value="SelectAllGarbage">Select All Garbage</button><br>
        <button type="submit" name="buttonClicked" value="DeleteSelectedFlights">Delete Selected Flights</button><br>
        <button type="submit" name="buttonClicked" value="MergeSelectedFlights">Merge Selected Flights</button><br>
        <button type="submit" name="buttonClicked" value="SaveChanges">Save Changes</button><br>
        <button type="reset"  name="buttonClicked" value="ResetPage">Reset Page </button><br>
    int rowIndex = -1;
        @grid.GetHtml(
                mode: WebGridPagerModes.All,
                tableStyle: "webgrid",
                headerStyle: "webgrid-header",
                footerStyle: "table-pager",
     columns: grid.Columns(

        grid.Column(columnName: "IsChecked", header: "Select", format: (item) => Html.CheckBox("flightList[" + (++rowIndex) + "].IsChecked", (bool)(item.IsChecked != null ? item.IsChecked : false), new { id = item.FlightID })),
        grid.Column(null, header: "", format: (item) => Html.Hidden("flightList[" + (rowIndex) + "].FlightID", (string)item.FlightID.ToString())),

        //grid.Column(columnName: "IsChecked1", header: "Select", format: (item) => Html.CheckBox("IsSelected" + (string)item.FlightID.ToString(), (bool)(item.IsChecked != null ? item.IsChecked : false), new { id = item.FlightID })),
        grid.Column(columnName: "FlightID", header: "Flight ID", style: "text-align-left", format: (item) => Html.ActionLink((string)item.FlightID.ToString(), "DisplayFlightData", "Flight", new { id = item.FlightID, actionBack = @ViewBag.ActionBack }, null)),

        // grid.Column(columnName: "RouteID", header: "Route ID", style: "text-align-left", format: (item) => Html.DropDownList("FlightIdDropDown:" + (string)item.FlightID.ToString(), new SelectList(Model.flightList.OrderByDescending(m => m.FlightID), "FlightID", "FlightID", item.RouteID == null ? item.FlightID : item.RouteID))),
        grid.Column(columnName: "RouteID", header: "Route ID", style: "text-align-left"),
        grid.Column(columnName: "FlightName", header: "Flight/Arpt", style: "text-align-left"),
        grid.Column(columnName: "FlightTimeStart", header: "Start Time Local", style: "text-align-left"),
        //grid.Column(columnName: "FlightDateUTC",header: "Date UTC",style: "text-align-left",format: (item) => item.FlightDateUTC.ToString("d",(new System.Globalization.CultureInfo("ja-JP")).DateTimeFormat)),
        //grid.Column(columnName: "FlightDateUTC",header: "Start Time UTC",style: "text-align-left",format: (item) => item.FlightDateUTC.ToString("t",(new System.Globalization.CultureInfo("hr-HR")).DateTimeFormat)),
        grid.Column(columnName: "FlightDurationMin", header: "Minutes", style: "text-align-left"),
        grid.Column(columnName: "Points", header: "Points", style: "text-align-left"),
        //grid.Column(columnName: "IsJunk", header: "Garbage", format: (item) => Html.CheckBox("IsJunk:" + (string)item.FlightID.ToString(), (bool)(item.IsJunk != null ? item.IsJunk : false))),
        grid.Column(columnName: "AcftNumLocal", header: "Aircraft", style: "text-align-left"),
        //grid.Column(columnName: "IsShared", header: "Public", format: (item) => Html.CheckBox("IsShare:" + (string)item.FlightID.ToString(), (bool)(item.IsShared != null ? item.IsShared : false), new { id = item.FlightID })),
        grid.Column(columnName: "IsShared", header: "Public", format: (item) => Html.CheckBox("flightList[" + rowIndex + "].IsShared", (bool)(item.IsShared != null ? item.IsShared : false))),
        grid.Column(columnName: "IsJunk", header: "Garbage", format: (item) => Html.CheckBox("flightList[" + rowIndex + "].IsJunk", (bool)(item.IsJunk != null ? item.IsJunk : false))),
        grid.Column(columnName: "PilotCode", header: "Phone", style: "text-align-left"),
        grid.Column(columnName: "FlightID", header: "Edit", style: "text-align-left", format: (item) => @Html.ActionLink("edit", "FlightEditAdm", new { id = item.FlightID })),
        grid.Column(columnName: "Comments", header: "Comments", style: "text-align-left")
        ))

    }
}

@section scripts{
    <script type="text/javascript">
        window.formChanged = false;
        $(document).ready(function(){
            $(':input').change(function () {
                //alert("form changed!")
                window.formChanged = true;
            });

            $('form').submit(function () {
                //alert("form submitted!")
                window.formChanged = false;
                window.onbeforeunload = null;
            });

        });

        $(window).bind('beforeunload', function () {
            if (window.formChanged == true) { alert('You have unsaved changes!'); return false; }
            //else return true;
        });

    </script>
}






